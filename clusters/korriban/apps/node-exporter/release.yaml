apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: prometheus-community
  namespace: flux-system
spec:
  interval: 24h
  url: https://prometheus-community.github.io/helm-charts

---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: node-exporter
  namespace: monitoring
  labels:
    app.kubernetes.io/name: node-exporter
    app.kubernetes.io/part-of: monitoring-stack
spec:
  interval: 10m
  timeout: 10m
  chart:
    spec:
      chart: prometheus-node-exporter
      version: "4.47.x"
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      interval: 5m

  install:
    createNamespace: false
    remediation:
      retries: 3

  upgrade:
    remediation:
      retries: 3
      remediateLastFailure: true
    cleanupOnFail: true

  rollback:
    recreate: true
    force: true
    cleanupOnFail: true

  dependsOn:
    - name: prometheus
      namespace: monitoring

  values:
    # Image configuration
    image:
      registry: quay.io
      repository: prometheus/node-exporter
      tag: "v1.9.1"
      pullPolicy: IfNotPresent

    # Resource limits
    resources:
      limits:
        cpu: 250m
        memory: 180Mi
      requests:
        cpu: 102m
        memory: 180Mi

    # Security configuration - required for host metrics
    podSecurityContext:
      fsGroup: 65534
      runAsNonRoot: false
      runAsUser: 0
      seccompProfile:
        type: RuntimeDefault

    containerSecurityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL

    # DaemonSet configuration - required for host access
    hostNetwork: true
    hostPID: true

    # Service configuration
    service:
      enabled: true
      type: ClusterIP
      port: 9100
      targetPort: 9100
      portName: http-metrics
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9100"
        prometheus.io/path: "/metrics"

    # ServiceMonitor for Prometheus discovery
    prometheus:
      monitor:
        enabled: true
        interval: 30s
        scrapeTimeout: 10s
        path: /metrics
        additionalLabels:
          release: prometheus
        relabelings:
          - sourceLabels: [__meta_kubernetes_pod_node_name]
            targetLabel: instance

    # Tolerations to run on all nodes including control plane
    tolerations:
      - operator: Exists
        effect: NoSchedule

    # Node exporter arguments
    extraArgs:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --path.rootfs=/host/root
      - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
      - --collector.netclass.ignored-devices=^(veth.*)$
      - --no-collector.wifi
      - --no-collector.hwmon

    # Volume mounts for host metrics
    extraHostVolumeMounts:
      - name: proc
        hostPath: /proc
        mountPath: /host/proc
        readOnly: true
        mountPropagation: HostToContainer
      - name: sys
        hostPath: /sys
        mountPath: /host/sys
        readOnly: true
        mountPropagation: HostToContainer
      - name: root
        hostPath: /
        mountPath: /host/root
        readOnly: true
        mountPropagation: HostToContainer
