apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: metrics-server
  namespace: flux-system
spec:
  interval: 1h
  url: https://kubernetes-sigs.github.io/metrics-server/
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: metrics-server
  namespace: monitoring
  labels:
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/part-of: monitoring-stack
spec:
  targetNamespace: monitoring
  interval: 10m
  timeout: 10m
  chart:
    spec:
      chart: metrics-server
      version: ">=3.12.0"
      sourceRef:
        kind: HelmRepository
        name: metrics-server
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: false
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      remediateLastFailure: true
  rollback:
    cleanupOnFail: true
    force: true
    recreate: true
  values:
    # Image configuration
    image:
      repository: registry.k8s.io/metrics-server/metrics-server
      tag: "" # Will use chart default
      pullPolicy: IfNotPresent
    # Arguments for metrics-server
    args:
      - --cert-dir=/tmp
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --kubelet-use-node-status-port
      - --metric-resolution=15s
      # For Talos, we need to skip TLS verification as kubelet uses self-signed certs
      - --kubelet-insecure-tls
    # Resource limits and requests
    resources:
      requests:
        cpu: 100m
        memory: 200Mi
      limits:
        cpu: 500m
        memory: 512Mi
    # Service configuration
    service:
      type: ClusterIP
      port: 443
      annotations: {}
      labels: {}
    # Enable APIService
    apiService:
      create: true
      annotations: {}
      insecureSkipTLSVerify: true
    # Pod annotations
    podAnnotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "10250"
    # Priority class
    priorityClassName: system-cluster-critical
    # Host network (not needed for Talos)
    hostNetwork: false
    # Replicas for high availability
    replicas: 2
    # Pod disruption budget
    podDisruptionBudget:
      enabled: true
      minAvailable: 1
    # Affinity rules for spreading across nodes
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: metrics-server
              topologyKey: kubernetes.io/hostname
    # Tolerations for master nodes
    tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
