apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: alertmanager
  namespace: monitoring
  labels:
    app.kubernetes.io/name: alertmanager
    app.kubernetes.io/part-of: monitoring-stack
spec:
  chart:
    spec:
      chart: alertmanager
      version: "1.24.x"
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      interval: 5m
  interval: 10m
  timeout: 10m
  dependsOn:
    - name: prometheus
      namespace: monitoring
  install:
    createNamespace: false
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  rollback:
    force: true
    recreate: true
  values:
    replicaCount: 3
    persistence:
      enabled: true
      storageClass: "nfs-holocron-general"
      accessMode: ReadWriteOnce
      size: 5Gi
    podSecurityContext:
      runAsUser: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      fsGroup: 65534
    securityContext:
      runAsUser: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      fsGroup: 65534
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 300m
        memory: 256Mi
    serviceMonitor:
      enabled: true
      additionalLabels:
        app.kubernetes.io/part-of: monitoring-stack
    extraSecretMounts:
      - name: alertmanager-secrets
        secretName: alertmanager-secrets
        mountPath: /etc/alertmanager/secrets
        readOnly: true
    config:
      global:
        resolve_timeout: 5m
        slack_api_url_file: "/etc/alertmanager/secrets/slack-webhook-url"
      route:
        receiver: "default"
        group_by: ["alertname", "cluster", "service"]
        group_wait: 30s
        group_interval: 5m
        repeat_interval: 4h
        routes:
          # Critical alerts - immediate notification
          - matchers:
              - severity="critical"
            receiver: "critical"
            group_wait: 10s
            repeat_interval: 1h
            continue: true
          # Warning alerts - grouped notifications
          - matchers:
              - severity="warning"
            receiver: "warning"
            group_wait: 2m
            repeat_interval: 12h
          # Infrastructure alerts
          - matchers:
              - alertname=~"Node.*|Disk.*|Memory.*|CPU.*"
            receiver: "infrastructure"
            group_by: ["alertname", "instance"]
          # Application alerts
          - matchers:
              - alertname=~"Pod.*|Container.*|Service.*"
            receiver: "application"
            group_by: ["alertname", "namespace", "pod"]
      receivers:
        - name: "default"
          webhook_configs:
            - url: "http://webhook-receiver.monitoring.svc.cluster.local:8080/alerts"
              send_resolved: true
        - name: "critical"
          webhook_configs:
            - url: "http://webhook-receiver.monitoring.svc.cluster.local:8080/critical"
              send_resolved: true
              http_config:
                basic_auth:
                  username: "alertmanager"
                  password_file: "/etc/alertmanager/secrets/webhook-password"
        - name: "warning"
          webhook_configs:
            - url: "http://webhook-receiver.monitoring.svc.cluster.local:8080/warning"
              send_resolved: true
        - name: "infrastructure"
          webhook_configs:
            - url: "http://webhook-receiver.monitoring.svc.cluster.local:8080/infrastructure"
              send_resolved: true
        - name: "application"
          webhook_configs:
            - url: "http://webhook-receiver.monitoring.svc.cluster.local:8080/application"
              send_resolved: true
      inhibit_rules:
        # Inhibit warning alerts when critical alerts are firing
        - source_matchers:
            - severity="critical"
          target_matchers:
            - severity="warning"
          equal: ["alertname", "cluster", "service"]
    # Pod anti-affinity for HA
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values: ["alertmanager"]
              topologyKey: kubernetes.io/hostname
