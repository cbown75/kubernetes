apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: grafana
  namespace: flux-system
spec:
  interval: 24h
  url: https://grafana.github.io/helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: loki
  namespace: monitoring
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/part-of: monitoring-stack
spec:
  targetNamespace: monitoring
  interval: 10m
  timeout: 10m
  chart:
    spec:
      chart: loki
      version: "6.30.x"
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: false
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  rollback:
    recreate: true
    force: true
  values:
    # Loki configuration
    loki:
      auth_enabled: false
      commonConfig:
        replication_factor: 1
        path_prefix: /var/loki
        compactor_address: 'loki'
      # NFS storage configuration
      storage:
        type: 'filesystem'
        filesystem:
          chunks_directory: '/var/loki/chunks'
          rules_directory: '/var/loki/rules'
          admin_api_directory: '/var/loki/admin'
      schemaConfig:
        configs:
          - from: 2024-04-01
            store: tsdb
            object_store: filesystem
            schema: v13
            index:
              prefix: loki_index_
              period: 24h
      # Ingester configuration
      ingester:
        chunk_idle_period: 1m
        max_chunk_age: 1h
        chunk_target_size: 1048576
        chunk_retain_period: 30s
        max_transfer_retries: 0
        wal:
          dir: /var/loki/wal
      # Compactor configuration
      compactor:
        working_directory: /var/loki
        compactor_ring:
          kvstore:
            store: inmemory
      # Analytics & telemetry
      analytics:
        reporting_enabled: false
    # Single binary deployment mode
    deploymentMode: SingleBinary
    singleBinary:
      replicas: 1
      # Resources
      resources:
        limits:
          cpu: 1
          memory: 2Gi
        requests:
          cpu: 500m
          memory: 1Gi
      # Persistence configuration
      persistence:
        enabled: true
        storageClass: "nfs-holocron-general"
        size: 50Gi
      # Security contexts
      podSecurityContext:
        fsGroup: 101
        runAsGroup: 101
        runAsNonRoot: true
        runAsUser: 101
        seccompProfile:
          type: RuntimeDefault
      containerSecurityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        readOnlyRootFilesystem: true
    # Memcached configuration
    memcached:
      podSecurityContext:
        fsGroup: 11211
        runAsGroup: 11211
        runAsNonRoot: true
        runAsUser: 11211
        seccompProfile:
          type: RuntimeDefault
      containerSecurityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        readOnlyRootFilesystem: true
    # Disable MinIO
    minio:
      enabled: false
    # Cache configuration
    chunksCache:
      enabled: true
      allocatedMemory: 1024
    resultsCache:
      enabled: true
      allocatedMemory: 512
    # Monitoring configuration
    monitoring:
      selfMonitoring:
        enabled: false
      serviceMonitor:
        enabled: true
        labels:
          app.kubernetes.io/part-of: monitoring-stack
    # Disable Traefik ingress - we're using Istio
    ingress:
      enabled: false
    # RBAC configuration
    rbac:
      pspEnabled: false
    # Disable test pods
    test:
      enabled: false
