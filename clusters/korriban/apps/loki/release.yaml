apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: loki
  namespace: monitoring
spec:
  dependsOn:
  - name: traefik
    namespace: flux-system
  interval: 10m
  timeout: 10m
  chart:
    spec:
      chart: loki
      version: 6.6.x
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: false
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  rollback:
    recreate: true
    force: true
  values:
    deploymentMode: SingleBinary
    singleBinary:
      replicas: 1
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 250m
          memory: 512Mi
      persistence:
        enabled: true
        storageClass: nfs-holocron-general
        size: 10Gi
    loki:
      auth_enabled: false
      limits_config:
        retention_period: 168h
      config: "auth_enabled: {{ .Values.loki.auth_enabled }}\nserver:\n  http_listen_port:\
        \ 3100\n\ncommon:\n  path_prefix: /var/loki\n  storage:\n    filesystem:\n\
        \      chunks_directory: /var/loki/chunks\n      rules_directory: /var/loki/rules\n\
        \  ring:\n    kvstore:\n      store: memberlist\n\nschema_config:\n  configs:\n\
        \    - from: 2020-10-24\n      store: tsdb\n      object_store: filesystem\n\
        \      schema: v13\n      index:\n        prefix: index_\n        period:\
        \ 24h\n\nruler:\n  storage:\n    type: local\n    local:\n      directory:\
        \ /var/loki/rules\n"
    serviceMonitor:
      enabled: true
      labels:
        app.kubernetes.io/part-of: monitoring-stack
    ingress:
      enabled: true
      ingressClassName: traefik
      hosts:
      - host: loki.home.cwbtech.net
        paths:
        - path: /
          pathType: Prefix
      tls:
      - secretName: loki-tls
        hosts:
        - loki.home.cwbtech.net
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-cloudflare
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.tls: 'true'
    test:
      enabled: false
    enterprise:
      enabled: false
