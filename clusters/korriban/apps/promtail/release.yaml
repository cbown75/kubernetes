---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: promtail
  namespace: monitoring
spec:
  dependsOn:
    - name: loki
      namespace: monitoring
  interval: 10m
  timeout: 10m
  chart:
    spec:
      chart: promtail
      version: "6.15.x"
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
      interval: 5m

  install:
    createNamespace: false
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  rollback:
    recreate: true
    force: true

  values:
    # DaemonSet configuration
    daemonset:
      enabled: true

    # Resources
    resources:
      limits:
        cpu: 200m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 64Mi

    # Override default volumes to remove Docker-specific mounts
    defaultVolumes:
      - name: run
        hostPath:
          path: /run/promtail
      - name: pods
        hostPath:
          path: /var/log/pods

    defaultVolumeMounts:
      - name: run
        mountPath: /run/promtail
      - name: pods
        mountPath: /var/log/pods
        readOnly: true

    # Security context for Talos
    containerSecurityContext:
      runAsUser: 0
      runAsGroup: 0
      fsGroup: 4
      capabilities:
        add:
          - DAC_READ_SEARCH
        drop:
          - ALL
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false

    # Promtail configuration
    config:
      clients:
        - url: http://loki.monitoring.svc.cluster.local:3100/loki/api/v1/push
          tenant_id: ""

      positions:
        filename: /run/promtail/positions.yaml

      server:
        http_listen_port: 3101
        grpc_listen_port: 0

      snippets:
        pipelineStages:
          - cri: {}

        scrapeConfigs: |
          # Kubernetes pod logs for Talos/containerd
          - job_name: kubernetes-pods
            kubernetes_sd_configs:
              - role: pod
            pipeline_stages:
              - cri: {}
            relabel_configs:
              - source_labels:
                  - __meta_kubernetes_pod_controller_name
                regex: "([0-9a-z-.]+?)(-[0-9a-f]{8,10})?"
                action: replace
                target_label: __tmp_controller_name
              - source_labels:
                  - __meta_kubernetes_pod_label_app_kubernetes_io_name
                  - __meta_kubernetes_pod_label_app
                  - __tmp_controller_name
                  - __meta_kubernetes_pod_name
                regex: "(^[0-9a-z-.]+|;[0-9a-z-.]+|;[0-9a-z-.]+|;[0-9a-z-.]+).*"
                action: replace
                target_label: app
              - source_labels:
                  - __meta_kubernetes_pod_label_app_kubernetes_io_version
                  - __meta_kubernetes_pod_label_version
                regex: "(^[0-9a-z-.]+|;[0-9a-z-.]+).*"
                action: replace
                target_label: version
              - action: replace
                source_labels:
                  - __meta_kubernetes_namespace
                target_label: namespace
              - action: replace
                source_labels:
                  - __meta_kubernetes_pod_name
                target_label: pod
              - action: replace
                source_labels:
                  - __meta_kubernetes_pod_container_name
                target_label: container
              - action: replace
                replacement: /var/log/pods/*$1/*.log
                separator: /
                source_labels:
                  - __meta_kubernetes_pod_uid
                  - __meta_kubernetes_pod_container_name
                target_label: __path__
              # Drop system namespaces to reduce noise
              - action: drop
                regex: kube-system|flux-system|metallb-system
                source_labels:
                  - __meta_kubernetes_namespace

    # ServiceMonitor for Prometheus
    serviceMonitor:
      enabled: true
      labels:
        app.kubernetes.io/part-of: monitoring-stack

    # Tolerations to run on all nodes including control plane
    tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
