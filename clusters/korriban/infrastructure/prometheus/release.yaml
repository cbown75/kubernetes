values:
  global:
    imageRegistry: ""
    storageClass: "nfs-holocron-fast"

  prometheus:
    replicaCount: 1

    image:
      registry: docker.io
      repository: prom/prometheus
      tag: "v2.51.2"
      pullPolicy: IfNotPresent

    resources:
      limits:
        cpu: 2000m
        memory: 4Gi
      requests:
        cpu: 500m
        memory: 2Gi

    persistence:
      enabled: true
      storageClass: "nfs-holocron-fast"
      size: 50Gi

  service:
    type: ClusterIP
    port: 9090
    targetPort: 9090
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9090"

  serviceAccount:
    create: true
    automount: true
    annotations: {}

  rbac:
    create: true

  ingress:
    enabled: true
    className: "traefik"
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
      traefik.ingress.kubernetes.io/router.middlewares: monitoring-prometheus-auth@kubernetescrd
      cert-manager.io/cluster-issuer: letsencrypt-cloudflare
    hosts:
      - host: prometheus.home.cwbtech.net
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: prometheus-tls
        hosts:
          - prometheus.home.cwbtech.net

  serviceMonitor:
    enabled: true
    interval: 30s
    scrapeTimeout: 10s
    labels:
      app.kubernetes.io/part-of: monitoring-stack

  networkPolicy:
    enabled: true
    ingress:
      - from:
          - namespaceSelector:
              matchLabels:
                name: traefik-system
        ports:
          - protocol: TCP
            port: 9090
      - from:
          - namespaceSelector:
              matchLabels:
                name: monitoring
        ports:
          - protocol: TCP
            port: 9090

  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
