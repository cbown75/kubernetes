---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: traefik
  namespace: flux-system
spec:
  interval: 24h
  url: https://traefik.github.io/charts
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: traefik-cloudflare
  namespace: traefik-system
spec:
  encryptedData:
    CF_API_TOKEN: AgBy3i4OJSWK+put-your-encrypted-token-here
  template:
    metadata:
      name: traefik-cloudflare
      namespace: traefik-system
    type: Opaque
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: traefik
  namespace: flux-system
spec:
  targetNamespace: traefik-system
  dependsOn:
    - name: sealed-secrets
      namespace: kube-system
  interval: 10m
  timeout: 5m
  chart:
    spec:
      chart: traefik
      version: "28.x" # Use latest stable 28.x version
      sourceRef:
        kind: HelmRepository
        name: traefik
        namespace: flux-system
      interval: 5m

  # Your existing values, translated to official chart format
  values:
    # Deployment configuration
    deployment:
      enabled: true
      kind: Deployment
      replicas: 2

    # Service configuration (your existing config works!)
    service:
      enabled: true
      type: LoadBalancer
      annotations:
        metallb.universe.tf/address-pool: default
      spec:
        loadBalancerSourceRanges: []

    # Ingress Class (replaces your ingressClass config)
    ingressClass:
      enabled: true
      isDefaultClass: true

    # RBAC (your custom chart had this)
    rbac:
      enabled: true

    # Service Account
    serviceAccount:
      create: true

    # Entry Points (your additionalConfiguration)
    ports:
      web:
        port: 8000
        expose: true
        exposedPort: 80
        protocol: TCP
        redirectTo:
          port: websecure
          scheme: https
          permanent: true
      websecure:
        port: 8443
        expose: true
        exposedPort: 443
        protocol: TCP
        tls:
          enabled: true
      traefik:
        port: 9000
        expose: false # Dashboard port
        protocol: TCP
      metrics:
        port: 9100
        expose: false
        protocol: TCP

    # API and Dashboard (your dashboard config)
    api:
      dashboard: true
      debug: false

    # Metrics (for Prometheus integration)
    metrics:
      prometheus:
        addEntryPointsLabels: true
        addServicesLabels: true
        addRoutersLabels: true

    # Let's Encrypt configuration with Cloudflare DNS challenge
    certificatesResolvers:
      letsencrypt:
        acme:
          email: cbown75@gmail.com
          storage: /data/acme.json
          caServer: https://acme-v02.api.letsencrypt.org/directory
          # DNS challenge with Cloudflare (using Sealed Secret)
          dnsChallenge:
            provider: cloudflare
            delayBeforeCheck: 10
            resolvers:
              - "1.1.1.1:53"
              - "8.8.8.8:53"

    # Persistence (for ACME certificates)
    persistence:
      enabled: true
      accessMode: ReadWriteOnce
      size: 128Mi
      storageClass: "" # Use default storage class
      path: /data

    # Security Context
    securityContext:
      capabilities:
        drop: [ALL]
        add: [NET_BIND_SERVICE]
      readOnlyRootFilesystem: true
      runAsGroup: 65532
      runAsNonRoot: true
      runAsUser: 65532

    podSecurityContext:
      fsGroup: 65532

    # Resource limits
    resources:
      requests:
        cpu: 100m
        memory: 50Mi
      limits:
        cpu: 300m
        memory: 150Mi

    # Providers (replaces your additionalConfiguration.providers)
    providers:
      kubernetesCRD:
        enabled: true
        allowCrossNamespace: true
        allowExternalNameServices: true
      kubernetesIngress:
        enabled: true
        allowExternalNameServices: true

    # Logs
    logs:
      general:
        level: INFO
      access:
        enabled: true

    # Additional arguments (for any extra Traefik config)
    additionalArguments: []

    # Environment variables (Cloudflare API token from Sealed Secret)
    env:
      - name: CF_API_TOKEN
        valueFrom:
          secretKeyRef:
            name: traefik-cloudflare
            key: CF_API_TOKEN

  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  rollback:
    recreate: true
    force: true
