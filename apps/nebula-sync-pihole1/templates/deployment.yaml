apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nebula-sync-pihole1.fullname" . }}
  labels:
    {{- include "nebula-sync-pihole1.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "nebula-sync-pihole1.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nebula-sync-pihole1.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nebula-sync-pihole1.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.hostNetwork }}
      hostNetwork: {{ .Values.hostNetwork }}
      {{- end }}
      {{- if .Values.dnsPolicy }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      {{- end }}
      {{- if .Values.dnsConfig }}
      dnsConfig:
        {{- toYaml .Values.dnsConfig | nindent 8 }}
      {{- end }}
      
      # Init container that builds the environment variables
      initContainers:
      - name: secret-composer
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          echo "Building nebula-sync configuration..."
          
          # Read passwords from mounted secrets
          PRIMARY_PASSWORD=$(cat /secrets/primary-password)
          REPLICA1_PASSWORD=$(cat /secrets/replica-password-1)
          REPLICA2_PASSWORD=$(cat /secrets/replica-password-2)
          REPLICA3_PASSWORD=$(cat /secrets/replica-password-3)
          
          # Build the environment variables file
          cat > /shared-config/env-vars << EOF
          PRIMARY="{{ .Values.nebulaSync.primary.url }}|${PRIMARY_PASSWORD}"
          REPLICAS="{{ index .Values.nebulaSync.replicas.urls 0 }}|${REPLICA1_PASSWORD},{{ index .Values.nebulaSync.replicas.urls 1 }}|${REPLICA2_PASSWORD},{{ index .Values.nebulaSync.replicas.urls 2 }}|${REPLICA3_PASSWORD}"
          EOF
          
          # Set secure permissions and verify
          chmod 600 /shared-config/env-vars
          echo "Configuration created successfully:"
          echo "PRIMARY=$(head -1 /shared-config/env-vars | cut -d'=' -f1)=<URL>|<password>"
          echo "REPLICAS=$(tail -1 /shared-config/env-vars | cut -d'=' -f1)=<URL1>|<password1>,<URL2>|<password2>,<URL3>|<password3>"
        
        volumeMounts:
        - name: shared-config
          mountPath: /shared-config
        - name: secrets-volume
          mountPath: /secrets
          readOnly: true
        
        securityContext:
          runAsNonRoot: true
          runAsUser: 65534
          runAsGroup: 65534
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
      
      # Main nebula-sync container
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        
        command: ['/bin/sh', '-c']
        args:
        - |
          echo "Starting nebula-sync..."
          
          # Source the environment variables created by init container
          if [ -f /shared-config/env-vars ]; then
            set -a
            source /shared-config/env-vars
            set +a
            echo "Loaded configuration from init container"
          else
            echo "ERROR: Configuration file not found!"
            exit 1
          fi
          
          # Start nebula-sync with the environment variables
          exec /usr/bin/nebula-sync
        
        env:
        # Sync configuration options
        - name: FULL_SYNC
          value: {{ .Values.nebulaSync.config.fullSync | quote }}
        - name: CRON
          value: {{ .Values.nebulaSync.config.cron | quote }}
        - name: TZ
          value: {{ .Values.nebulaSync.config.timezone | quote }}
        
        # Individual sync settings (only when FULL_SYNC=false)
        - name: SYNC_CONFIG_DNS
          value: {{ .Values.nebulaSync.dns.enabled | quote }}
        - name: SYNC_CONFIG_DHCP
          value: {{ .Values.nebulaSync.dhcp.enabled | quote }}
        - name: SYNC_CONFIG_NTP
          value: {{ .Values.nebulaSync.ntp.enabled | quote }}
        - name: SYNC_CONFIG_RESOLVER
          value: {{ .Values.nebulaSync.resolver.enabled | quote }}
        - name: SYNC_CONFIG_DATABASE
          value: {{ .Values.nebulaSync.database.enabled | quote }}
        - name: SYNC_CONFIG_MISC
          value: {{ .Values.nebulaSync.misc.enabled | quote }}
        - name: SYNC_CONFIG_DEBUG
          value: {{ .Values.nebulaSync.debug.enabled | quote }}
        
        # Gravity sync options
        - name: SYNC_GRAVITY_DHCP_LEASES
          value: {{ .Values.nebulaSync.gravity.dhcpLeases | quote }}
        - name: SYNC_GRAVITY_GROUP
          value: {{ .Values.nebulaSync.gravity.group | quote }}
        - name: SYNC_GRAVITY_AD_LIST
          value: {{ .Values.nebulaSync.gravity.adList | quote }}
        - name: SYNC_GRAVITY_AD_LIST_BY_GROUP
          value: {{ .Values.nebulaSync.gravity.adListByGroup | quote }}
        - name: SYNC_GRAVITY_DOMAIN_LIST
          value: {{ .Values.nebulaSync.gravity.domainList | quote }}
        - name: SYNC_GRAVITY_DOMAIN_LIST_BY_GROUP
          value: {{ .Values.nebulaSync.gravity.domainListByGroup | quote }}
        - name: SYNC_GRAVITY_CLIENT
          value: {{ .Values.nebulaSync.gravity.client | quote }}
        - name: SYNC_GRAVITY_CLIENT_BY_GROUP
          value: {{ .Values.nebulaSync.gravity.clientByGroup | quote }}
        
        # Run gravity after sync
        - name: RUN_GRAVITY
          value: "true"
        
        # Additional environment variables
        {{- with .Values.env }}
        {{- range . }}
        - name: {{ .name }}
          {{- if .value }}
          value: {{ .value | quote }}
          {{- else if .valueFrom }}
          valueFrom:
            {{- toYaml .valueFrom | nindent 12 }}
          {{- end }}
        {{- end }}
        {{- end }}
        
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        
        # Volume mounts
        volumeMounts:
        - name: shared-config
          mountPath: /shared-config
          readOnly: true
        {{- with .Values.volumeMounts }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      
      # Volumes
      volumes:
      - name: shared-config
        emptyDir: {}
      - name: secrets-volume
        secret:
          secretName: nebula-sync-pihole1-secrets
          defaultMode: 0400
      {{- with .Values.volumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
