apiVersion: v1
kind: ConfigMap
metadata:
  name: alloy-logs
  namespace: monitoring
  labels:
    app.kubernetes.io/name: alloy
    app.kubernetes.io/component: logs
    app.kubernetes.io/part-of: monitoring-stack
data:
  config.alloy: "// Loki remote write endpoint\nloki.write \"loki_external\" {\n  endpoint {\n    url = \"http://loki.monitoring.svc.cluster.local:3100/loki/api/v1/push\"\n  }\n}\n\n// Kubernetes pod discovery\ndiscovery.kubernetes \"pods\" {\n  role = \"pod\"\n}\n\n// Custom pod discovery with filtering (matches your Promtail relabel_configs)\ndiscovery.relabel \"pod_logs_custom\" {\n  targets = discovery.kubernetes.pods.targets\n  \n  // Only collect logs from pods that have containers\n  rule {\n    source_labels = [\"__meta_kubernetes_pod_container_id\"]\n    regex         = \".+\"\n    action        = \"keep\"\n  }\n  \n  // Extract controller name for app labeling (matches your Promtail)\n  rule {\n    source_labels = [\"__meta_kubernetes_pod_controller_name\"]\n    regex         = \"([0-9a-z-.]+?)(-[0-9a-f]{8,10})?\"\n    target_label  = \"__tmp_controller_name\"\n    action        = \"replace\"\n  }\n  \n  // Set app label from various sources (matches your Promtail)\n  rule {\n    source_labels = [\n      \"__meta_kubernetes_pod_label_app_kubernetes_io_name\",\n      \"__meta_kubernetes_pod_label_app\", \n      \"__tmp_controller_name\",\n      \"__meta_kubernetes_pod_name\"\n    ]\n    regex         = \"(^[0-9a-z-.]+|;[0-9a-z-.]+|;[0-9a-z-.]+|;[0-9a-z-.]+).*\"\n    target_label  = \"app\"\n    action        = \"replace\"\n  }\n  \n  // Set version label\n  rule {\n    source_labels = [\n      \"__meta_kubernetes_pod_label_app_kubernetes_io_version\",\n      \"__meta_kubernetes_pod_label_version\"\n    ]\n    regex         = \"(^[0-9a-z-.]+|;[0-9a-z-.]+).*\"\n    target_label  = \"version\"\n    action        = \"replace\"\n  }\n  \n  // Set namespace\n  rule {\n    source_labels = [\"__meta_kubernetes_pod_namespace\"]\n    target_label  = \"namespace\"\n    action        = \"replace\"\n  }\n  \n  // Set pod name\n  rule {\n    source_labels = [\"__meta_kubernetes_pod_name\"]\n    target_label  = \"pod\"\n    action        = \"replace\"\n  }\n  \n  // Set container name\n  rule {\n    source_labels = [\"__meta_kubernetes_pod_container_name\"]\n    target_label  = \"container\"\n    action        = \"replace\"\n  }\n  \n  // Construct log path for containerd/Talos (matches your setup)\n  rule {\n    source_labels = [\"__meta_kubernetes_pod_uid\", \"__meta_kubernetes_pod_container_name\"]\n    target_label  = \"__path__\"\n    separator     = \"/\"\n    replacement   = \"/var/log/pods/*${1}/*.log\"\n    action        = \"replace\"\n  }\n  \n  // Drop system namespaces to reduce noise (matches your Promtail)\n  rule {\n    source_labels = [\"__meta_kubernetes_pod_namespace\"]\n    regex         = \"kube-system|flux-system|metallb-system\"\n    action        = \"drop\"\n  }\n}\n\n// Log processing with CRI format parsing (matches your Promtail CRI stage)\nloki.process \"pod_logs_process\" {\n  // Parse CRI format logs (containerd/Talos)\n  stage.cri {}\n  \n  forward_to = [loki.write.loki_external.receiver]\n}\n\n// Kubernetes log source using custom discovery\nloki.source.kubernetes \"pod_logs\" {\n  targets    = discovery.relabel.pod_logs_custom.output\n  forward_to = [loki.process.pod_logs_process.receiver]\n}\n"
