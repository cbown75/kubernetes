---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nfs-csi-driver.fullname" . }}-controller
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "nfs-csi-driver.labels" . | nindent 4 }}
    app: csi-nfs-controller
spec:
  replicas: {{ .Values.controller.replicas }}
  selector:
    matchLabels:
      app: csi-nfs-controller
  template:
    metadata:
      labels:
        app: csi-nfs-controller
        {{- include "nfs-csi-driver.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      serviceAccountName: {{ .Values.serviceAccount.controller }}
      {{- if .Values.tolerations }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.linux.enabled }}
      nodeSelector:
        kubernetes.io/os: linux
      {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      containers:
        - name: csi-provisioner
          image: {{ .Values.image.csiProvisioner.repository }}:{{ .Values.image.csiProvisioner.tag }}
          imagePullPolicy: {{ .Values.image.csiProvisioner.pullPolicy }}
          args:
            - "-v={{ .Values.controller.logLevel }}"
            - "--csi-address=$(ADDRESS)"
            - "--leader-election"
            - "--leader-election-namespace={{ .Release.Namespace }}"
            - "--extra-create-metadata=true"
            - "--feature-gates=HonorPVReclaimPolicy=true"
            - "--timeout=1200s"
            - "--retry-interval-max=30m"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
          resources:
            {{- toYaml .Values.controller.resources.csiProvisioner | nindent 12 }}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
        - name: csi-snapshotter
          image: {{ .Values.image.csiSnapshotter.repository }}:{{ .Values.image.csiSnapshotter.tag }}
          imagePullPolicy: {{ .Values.image.csiSnapshotter.pullPolicy }}
          args:
            - "--v={{ .Values.controller.logLevel }}"
            - "--csi-address=$(ADDRESS)"
            - "--leader-election-namespace={{ .Release.Namespace }}"
            - "--leader-election"
            - "--timeout=1200s"
            - "--retry-interval-max=30m"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
          resources:
            {{- toYaml .Values.controller.resources.csiSnapshotter | nindent 12 }}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
        - name: liveness-probe
          image: {{ .Values.image.livenessProbe.repository }}:{{ .Values.image.livenessProbe.tag }}
          imagePullPolicy: {{ .Values.image.livenessProbe.pullPolicy }}
          args:
            - --csi-address=/csi/csi.sock
            - --probe-timeout=3s
            - --http-endpoint=localhost:29652
            - --v={{ .Values.controller.logLevel }}
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
          resources:
            {{- toYaml .Values.controller.resources.livenessProbe | nindent 12 }}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
        - name: nfs
          image: {{ .Values.image.nfs.repository }}:{{ .Values.image.nfs.tag }}
          imagePullPolicy: {{ .Values.image.nfs.pullPolicy }}
          args:
            - "-v={{ .Values.controller.logLevel }}"
            - "--nodeid=$(NODE_ID)"
            - "--endpoint=$(CSI_ENDPOINT)"
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
          ports:
            - containerPort: 29652
              name: healthz
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 30
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: pods-mount-dir
              mountPath: {{ .Values.kubeletDir }}/pods
              mountPropagation: "Bidirectional"
          resources:
            {{- toYaml .Values.controller.resources.nfs | nindent 12 }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      volumes:
        - name: socket-dir
          emptyDir: {}
        - name: pods-mount-dir
          hostPath:
            path: {{ .Values.kubeletDir }}/pods
            type: Directory
