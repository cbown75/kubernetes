{{- if eq .Values.deployment.kind "Deployment" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "traefik.fullname" . }}
  labels:
    {{- include "traefik.labels" . | nindent 4 }}
  {{- with .Values.commonAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.deployment.replicas }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "traefik.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.commonAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "traefik.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "traefik.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - --configfile=/config/traefik.yml
            {{- if .Values.global.debug }}
            - --log.level=DEBUG
            {{- end }}
            {{- if .Values.traefik.serviceDiscovery.enabled }}
            {{- if .Values.traefik.serviceDiscovery.watchAllNamespaces }}
            - --providers.kubernetes.ingressclass=traefik
            - --providers.kubernetescrd
            {{- else }}
            {{- range .Values.traefik.serviceDiscovery.watchNamespaces }}
            - --providers.kubernetes.namespaces={{ . }}
            {{- end }}
            {{- end }}
            {{- end }}
          env:
            {{- if and .Values.sealedSecrets.enabled .Values.sealedSecrets.cloudflare.create }}
            # Cloudflare DNS challenge credentials
            - name: CF_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "traefik.fullname" . }}-cloudflare
                  key: CF_API_TOKEN
                  optional: true
            - name: CF_API_EMAIL
              valueFrom:
                secretKeyRef:
                  name: {{ include "traefik.fullname" . }}-cloudflare
                  key: CF_API_EMAIL
                  optional: true
            - name: CF_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "traefik.fullname" . }}-cloudflare
                  key: CF_API_KEY
                  optional: true
            {{- end }}
          ports:
            - name: web
              containerPort: 80
              protocol: TCP
            - name: websecure
              containerPort: 443
              protocol: TCP
            - name: traefik
              containerPort: 8080
              protocol: TCP
            {{- if .Values.metrics.prometheus.enabled }}
            - name: metrics
              containerPort: 8082
              protocol: TCP
            {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: true
            {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: {{ .Values.persistence.path }}
            {{- end }}
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: config
          configMap:
            name: {{ include "traefik.fullname" . }}
        {{- if .Values.persistence.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "traefik.fullname" .) }}
        {{- end }}
        - name: tmp
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
